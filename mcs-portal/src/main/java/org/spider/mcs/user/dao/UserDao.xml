<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.spider.mcs.user.dao.UserDao">

    <resultMap id="UserMap" type="org.spider.mcs.user.entity.User">
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="gender" column="gender"/>
        <result property="isAdmin" column="is_admin"/>
        <result property="isLock" column="is_lock"/>
        <result property="remark" column="remark"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="getUserListPage" resultMap="UserMap">
        SELECT * from mcs_user <include refid="userListPageWhere"/>
    </select>

    <sql id="userListPageWhere">
        where 1=1
        <if test="userName != null and  userName!= ''"> and user_name = #{userName} </if>
        <if test="name != null and name != ''"> AND name = #{name} </if>
    </sql>

    <select id="getUserByUserName" resultMap="UserMap">
        SELECT * from mcs_user where user_name = #{userName}
    </select>
    
    <insert id="insert" parameterType="org.spider.mcs.user.entity.UserVo">
        insert into mcs_user
          (user_id,user_name,password,name,email,phone,gender,is_admin,is_lock,remark,update_time,create_time)
        values
          (#{userId},#{userName},#{password},#{name},#{email},#{phone},#{gender},#{isAdmin},#{isLock},#{remark},now(),now())
    </insert>

    <update id="update" parameterType="org.spider.mcs.user.entity.UserVo">
        update mcs_user set
            name = #{name},
            email = #{email},
            phone = #{phone},
            gender = #{gender},
            is_admin = #{isAdmin},
            is_lock = #{isLock},
            remark = #{remark},
            update_time = now()
        where user_id = #{userId}
    </update>


    <delete id="delete" parameterType="int">
        DELETE  from mcs_user where user_id = #{userId}
    </delete>


</mapper>