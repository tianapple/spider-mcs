<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	   http://www.springframework.org/schema/aop
	   http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="successUrl" value="/main.html"/>
        <property name="loginUrl" value="/login.html"/>
        <property name="unauthorizedUrl" value="/error.html"/>
        <property name="filters">
            <map>
                <entry key="authc" value-ref="shiro"/>
            </map>
        </property>
        <!-- 下面value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值来的 -->
        <!-- anon：它对应的过滤器里面是空的,什么都没做,这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种 -->
        <!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器 org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->
        <property name="filterChainDefinitions">
            <value>
                /login.html=anon
                <!-- /login.action=anon -->
                /loginout.action=logout
                /resources/**=anon
                /error.html=anon
                /cms/member.action=authc,perms["PRIV_90"]
                /**=authc
            </value>
        </property>
    </bean>

    <bean id="shiro" class="org.spider.mcs.main.shiro.AuthFilter"/>
    <bean id="shiroRealm" class="org.spider.mcs.main.shiro.ShiroRealm"/>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="shiroRealm"/>
        <!-- 需要使用cache的话加上这句 -->
        <!--<property name="cacheManager" ref="shiroEhcacheManager"/>-->
    </bean>

    <!-- 用户授权信息Cache, 采用EhCache，需要的话就配置上此信息 -->
    <!--<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">-->
    <!--<property name="cacheManager" ref="ehCacheManager"/>-->
    <!--</bean>-->

    <!--<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">-->
    <!--<property name="configLocation" value="classpath:META-INF.spring/shiro-ehcache.xml"/>-->
    <!--&lt;!&ndash; 这里是关键！！！没有必错 &ndash;&gt;-->
    <!--<property name="shared" value="true"/>-->
    <!--</bean>-->

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- 由于本例中并未使用Shiro注解,故注释掉这两个bean(个人觉得将权限通过注解的方式硬编码在程序中,查看起来不是很方便,没必要使用) -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <!-- 开启Shiro的注解(如@RequiresRoles,@RequiresPermissions),需借助SpringAOP扫描使用Shiro注解的类,并在必要时进行安全逻辑验证 -->
    <aop:config proxy-target-class="true"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>